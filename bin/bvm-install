#!/bin/bash

original_path=$(pwd)
script_path="$(dirname "$(readlink -f "$0")")"
cd "$script_path"

function exit_script {
  cd "$original_path"
  exit "$1"
}

# Script to install a new version of Bun

bun_versions_dir="../versions"
version=$1
install_dir="$bun_versions_dir/$version"
arch=""
os=""

function validate_input {
  if [ -z "$1" ]; then
    echo "Usage: bvm-install <version>"
    exit_script 1
  fi
}

function set_platform_vars {
  if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if [ $(uname -m) == "aarch64" ]; then
      arch="aarch64"
    else
      arch="x64"
    fi
    os="linux"
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    if [ $(uname -m) == "arm64" ]; then
      arch="aarch64"
    else
      arch="x64"
    fi
    os="darwin"
  else
    echo "Unsupported operating system." >&2
    exit_script 1
  fi
}

function ensure_dependencies {
  # check if wget and sha256sum is installed, if not, install them depending on the OS
  echo "Checking dependencies..."
  if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if ! command -v wget &> /dev/null || ! command -v sha256sum &> /dev/null; then
      echo "Installing dependencies..."
      sudo apt install wget &> /dev/null
      if [ $? -ne 0 ]; then
        echo "Failed to install wget or sha256sum." >&2
        exit_script 1
      fi
    fi
  elif [[ "$OSTYPE" == "darwin"* ]]; then
      if ! command -v wget &> /dev/null || ! command -v sha3sum &> /dev/null; then
        echo "Installing dependencies..."
        brew install wget &> /dev/null
        if [ $? -ne 0 ]; then
          echo "Failed to install wget or sha3sum." >&2
          exit_script 1
        fi
      fi
  else
    echo "Unsupported operating system." >&2
    exit_script 1
  fi
}

function check_if_version_installed {
  if [ -d "$2" ]; then
    echo "Bun version $1 is already installed."
    exit_script 0
  fi
}

function install_bun_version {
  # Create the download URL
  download_package="bun-$os-$arch"
  download_url="https://github.com/oven-sh/bun/releases/download/bun-v$1/$download_package.zip"
  echo "Downloading Bun version $1... from $download_url"
  wget -q $download_url -O "$download_package.zip"
  if [ $? -ne 0 ]; then
    echo "Failed to download Bun version $1." >&2
    exit_script 1
  fi
  #mkdir -p "$2"
  unzip -q "$download_package.zip" -d "$2/"
  mv "$2/$download_package" "$2/$version"
  rm "$download_package.zip"
}

function validate_installation_dir() {
  if [ ! -d "$2" ]; then
    echo "Installation of Bun $1 failed. $2 does not exist."
    exit_script 1
  fi
}

function inform_install_status {
  if [ $1 -eq 0 ]; then
    echo "Bun version $version installed successfully."
    exit_script 0
  else
    echo "Failed to install Bun version $version." >&2
    exit_script 1
  fi
}

validate_input $version
set_platform_vars
ensure_dependencies
check_if_version_installed $version $install_dir
install_bun_version $version $bun_versions_dir
validate_installation_dir $version $install_dir
inform_install_status $?

./bvm-switch $version

exit_script 0